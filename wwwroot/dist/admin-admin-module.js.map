{"version":3,"sources":["webpack:///./src/app/admin/admin-routing.module.ts","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/autori/add-edit-autor/add-edit-autor.component.html","webpack:///./src/app/admin/autori/add-edit-autor/add-edit-autor.component.scss","webpack:///./src/app/admin/autori/add-edit-autor/add-edit-autor.component.ts","webpack:///./src/app/admin/autori/autori.component.html","webpack:///./src/app/admin/autori/autori.component.scss","webpack:///./src/app/admin/autori/autori.component.ts","webpack:///./src/app/admin/autori/autori.service.ts","webpack:///./src/app/admin/autori/deleteautor/deleteautor.component.html","webpack:///./src/app/admin/autori/deleteautor/deleteautor.component.scss","webpack:///./src/app/admin/autori/deleteautor/deleteautor.component.ts","webpack:///./src/app/admin/books/add-edit-book/add-edit-book.component.html","webpack:///./src/app/admin/books/add-edit-book/add-edit-book.component.scss","webpack:///./src/app/admin/books/add-edit-book/add-edit-book.component.ts","webpack:///./src/app/admin/books/books.component.html","webpack:///./src/app/admin/books/books.component.scss","webpack:///./src/app/admin/books/books.component.ts","webpack:///./src/app/admin/books/books.service.ts","webpack:///./src/app/admin/books/deletebook/deletebook.component.html","webpack:///./src/app/admin/books/deletebook/deletebook.component.scss","webpack:///./src/app/admin/books/deletebook/deletebook.component.ts","webpack:///./src/app/admin/genres/add-edit-genre/add-edit-genre.component.html","webpack:///./src/app/admin/genres/add-edit-genre/add-edit-genre.component.scss","webpack:///./src/app/admin/genres/add-edit-genre/add-edit-genre.component.ts","webpack:///./src/app/admin/genres/deletegenre/deletegenre.component.html","webpack:///./src/app/admin/genres/deletegenre/deletegenre.component.scss","webpack:///./src/app/admin/genres/deletegenre/deletegenre.component.ts","webpack:///./src/app/admin/genres/genres.component.html","webpack:///./src/app/admin/genres/genres.component.scss","webpack:///./src/app/admin/genres/genres.component.ts","webpack:///./src/app/admin/genres/genres.service.ts","webpack:///./src/app/admin/index/index.component.html","webpack:///./src/app/admin/index/index.component.scss","webpack:///./src/app/admin/index/index.component.ts","webpack:///./src/app/admin/models/author.ts","webpack:///./src/app/admin/models/book.ts","webpack:///./src/app/admin/models/genre.ts","webpack:///./src/app/admin/models/store.ts","webpack:///./src/app/admin/shared/data.service.ts","webpack:///./src/app/admin/shared/title.service.ts","webpack:///./src/app/admin/stores/add-edit-store/add-edit-store.component.html","webpack:///./src/app/admin/stores/add-edit-store/add-edit-store.component.scss","webpack:///./src/app/admin/stores/add-edit-store/add-edit-store.component.ts","webpack:///./src/app/admin/stores/deletestore/deletestore.component.html","webpack:///./src/app/admin/stores/deletestore/deletestore.component.scss","webpack:///./src/app/admin/stores/deletestore/deletestore.component.ts","webpack:///./src/app/admin/stores/stores.component.html","webpack:///./src/app/admin/stores/stores.component.scss","webpack:///./src/app/admin/stores/stores.component.ts","webpack:///./src/app/admin/stores/stores.service.ts"],"names":[],"mappings":"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","file":"admin-admin-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AutoriComponent } from './autori/autori.component';\r\nimport { IndexComponent } from './index/index.component';\r\nimport { GenresComponent } from './genres/genres.component';\r\nimport { StoresComponent } from './stores/stores.component';\r\nimport { BooksComponent } from './books/books.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: 'index' },\r\n    {\r\n        path: 'index', component: IndexComponent,\r\n        children: [\r\n            {\r\n                path: '', redirectTo: \"genres\"\r\n            },\r\n            {\r\n                path: 'autori', component: AutoriComponent\r\n            },\r\n            {\r\n                path: 'genres', component: GenresComponent\r\n            },\r\n            {\r\n                path: 'stores', component: StoresComponent\r\n            },\r\n            {\r\n                path: 'books', component: BooksComponent\r\n            },\r\n        ]\r\n    }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { AutoriComponent } from './autori/autori.component';\r\nimport { IndexComponent } from './index/index.component';\r\nimport { GenresComponent } from './genres/genres.component';\r\n\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { DemoMaterialModule } from '../material-module'\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TitleService } from './shared/title.service';\r\nimport { DataService } from './shared/data.service';\r\nimport { GenresService } from './genres/genres.service';\r\nimport { DeletegenreComponent } from './genres/deletegenre/deletegenre.component';\r\nimport { SpinnerService } from '../core/spinner.service';\r\nimport { AddEditGenreComponent } from './genres/add-edit-genre/add-edit-genre.component';\r\nimport { DeleteautorComponent } from './autori/deleteautor/deleteautor.component';\r\nimport { AddEditAutorComponent } from './autori/add-edit-autor/add-edit-autor.component';\r\nimport { AutoriService } from './autori/autori.service';\r\nimport { PipesModule } from '../pipes/pipes.module';\r\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\r\nimport { APP_DATE_FORMATS, AppDateAdapter } from '../core/dateformat';\r\nimport { StoresComponent } from './stores/stores.component';\r\nimport { DeletestoreComponent } from './stores/deletestore/deletestore.component';\r\nimport { AddEditStoreComponent } from './stores/add-edit-store/add-edit-store.component';\r\nimport { StoresService } from './stores/stores.service';\r\nimport { BooksComponent } from './books/books.component';\r\nimport { DeletebookComponent } from './books/deletebook/deletebook.component';\r\nimport { AddEditBookComponent } from './books/add-edit-book/add-edit-book.component';\r\n\r\n@NgModule({\r\n    declarations: [AutoriComponent,\r\n        IndexComponent,\r\n        GenresComponent,\r\n        DeletegenreComponent,\r\n        AddEditGenreComponent,\r\n        DeleteautorComponent,\r\n        AddEditAutorComponent,\r\n        StoresComponent,\r\n        DeletestoreComponent,\r\n        AddEditStoreComponent,\r\n        BooksComponent,\r\n        DeletebookComponent,\r\n        AddEditBookComponent],\r\n    providers: [TitleService,\r\n        DataService,\r\n        GenresService,\r\n        SpinnerService,\r\n        AutoriService,\r\n        StoresService,\r\n        {\r\n            provide: DateAdapter, useClass: AppDateAdapter\r\n        },\r\n        {\r\n            provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS\r\n        }],\r\n  imports: [\r\n    CommonModule,\r\n      AdminRoutingModule,\r\n      FlexLayoutModule,\r\n      DemoMaterialModule,\r\n      FormsModule,\r\n      ReactiveFormsModule,\r\n      PipesModule\r\n      \r\n    ],\r\n    entryComponents: [DeletegenreComponent,\r\n        AddEditGenreComponent,\r\n        AddEditAutorComponent,\r\n        DeleteautorComponent,\r\n        DeletestoreComponent,\r\n        AddEditStoreComponent,\r\n        DeletebookComponent,\r\n        AddEditBookComponent\r\n    ]\r\n})\r\nexport class AdminModule { }\r\n","module.exports = \"<h1 mat-dialog-title fxLayoutAlign=\\\"center center\\\">\\r\\n    <span *ngIf=\\\"data.type=='add'\\\">\\r\\n        Adauga gen\\r\\n    </span>\\r\\n    <span *ngIf=\\\"data.type=='edit'\\\">\\r\\n        Editeaza\\r\\n    </span>\\r\\n</h1>\\r\\n<div mat-dialog-content class=\\\"example-container\\\" fxLayout=\\\"column\\\">\\r\\n    <div class=\\\"input-row\\\" *ngIf=\\\"data.type=='edit'\\\">\\r\\n        <mat-form-field fxFlex>\\r\\n            <input matInput placeholder=\\\"Id autor\\\" disabled [ngModel]=\\\"data.autor.authorId\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"input-row\\\">\\r\\n        <mat-form-field fxFlex>\\r\\n            <input matInput placeholder=\\\"Nume autor\\\" [(ngModel)]=\\\"data.autor.name\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"input-row\\\">\\r\\n        <mat-form-field fxFlex>\\r\\n            <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Data nastere\\\" [(ngModel)]=\\\"data.autor.birthDay\\\" disabled mat-datepicker-toggle>\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #picker disabled=\\\"false\\\"></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"input-row\\\">\\r\\n        <mat-form-field fxFlex>\\r\\n            <input matInput placeholder=\\\"Loc nastere\\\" [(ngModel)]=\\\"data.autor.birthplace\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"input-row\\\">\\r\\n        <mat-form-field fxFlex>\\r\\n            <textarea matInput placeholder=\\\"Descriere\\\" rows=\\\"3\\\" [(ngModel)]=\\\"data.autor.description\\\"></textarea>\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n</div>\\r\\n<div mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n    <button mat-button color=\\\"primary\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial *ngIf=\\\"data.type=='add'\\\">\\r\\n        <mat-icon>add</mat-icon> Adauga\\r\\n    </button>\\r\\n    <button mat-button color=\\\"primary\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial *ngIf=\\\"data.type=='edit'\\\">\\r\\n        <mat-icon>save</mat-icon> Salveaza\\r\\n    </button>\\r\\n    <button mat-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\">\\r\\n        <mat-icon>close</mat-icon> Renunta\\r\\n    </button>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2F1dG9yaS9hZGQtZWRpdC1hdXRvci9hZGQtZWRpdC1hdXRvci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Author } from '../../models/author';\r\n\ninterface Data {\n    type: string;\r\n    autor: Author;\r\n}\n\n@Component({\n  selector: 'app-add-edit-autor',\n  templateUrl: './add-edit-autor.component.html',\n  styleUrls: ['./add-edit-autor.component.scss']\n})\nexport class AddEditAutorComponent implements OnInit {\n\n    constructor(public dialogRef: MatDialogRef<AddEditAutorComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: Data) { }\n\n    ngOnInit() {\n\n        if (this.data.autor == null || this.data.autor == undefined) {\n            this.data.autor = new Author();\r\n        }\n\n    }\n\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\n\n}\n","module.exports = \"\\r\\n<div fxLayout=\\\"row\\\">\\r\\n    <mat-form-field fxFlex>\\r\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n    </mat-form-field>\\r\\n    <div fxFlex=\\\"2 2 calc(10em + 10px)\\\"></div>\\r\\n    <div fxFlex fxLayoutAlign=\\\"end center\\\">\\r\\n        <button mat-button color=\\\"accent\\\" (click)=\\\"AddAuthor()\\\">\\r\\n            <mat-icon>add</mat-icon> Adauga\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"authorId\\\">\\r\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> Id. </mat-header-cell>\\r\\n            <mat-cell mat-cell *matCellDef=\\\"let element\\\"> {{element.authorId}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"name\\\">\\r\\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\r\\n            <mat-cell mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"birthDay\\\">\\r\\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Data nastere </mat-header-cell>\\r\\n            <mat-cell mat-cell *matCellDef=\\\"let element\\\"> {{element.birthDay | date:'dd/MM/yyyy'}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"birthplace\\\">\\r\\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Loc nastere </mat-header-cell>\\r\\n            <mat-cell mat-cell *matCellDef=\\\"let element\\\"> {{element.birthplace}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"description\\\">\\r\\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Description </mat-header-cell>\\r\\n            <mat-cell mat-cell *matCellDef=\\\"let element\\\"> {{element.description | truncate : 12}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"actions\\\">\\r\\n            <mat-header-cell mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n            <mat-cell mat-cell *matCellDef=\\\"let element\\\" fxLayoutAlign=\\\"end center\\\">\\r\\n                <button mat-button color=\\\"primary\\\" (click)=\\\"EditAuthor(element)\\\">Edit</button>\\r\\n                <button mat-button color=\\\"warn\\\" (click)=\\\"deleteAuthor(element)\\\">Delete</button>\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <mat-header-row mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n        <mat-row mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n\\r\\n\\r\\n    </table>\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20, 30]\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-column-description {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  max-width: 100px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vYXV0b3JpL0M6XFxVc2Vyc1xcYW5kcmVpLmZ1bmFydVxcRGVza3RvcFxcRmFjdWx0YXRlXFxEQVdcXExpYnJhcnlcXEJpYmxpb3RlY2FPbmxpbmVcXEJpYmxpb3RlY2FPbmxpbmUvc3JjXFxhcHBcXGFkbWluXFxhdXRvcmlcXGF1dG9yaS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQVcsRUFDZDs7QUFFRDtFQUNJLGlCQUFnQjtFQUNoQix3QkFBdUI7RUFDdkIsb0JBQW1CO0VBQ25CLGlCQUFlLEVBQ2xCIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vYXV0b3JpL2F1dG9yaS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubWF0LWNvbHVtbi1kZXNjcmlwdGlvbiB7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgbWF4LXdpZHRoOjEwMHB4O1xyXG59Il19 */\"","import { Component, OnInit, AfterViewInit, Output, ViewChild, EventEmitter } from '@angular/core';\r\nimport { TitleService } from '../shared/title.service';\r\nimport { MatSort, MatPaginator, MatDialog, MatSnackBar, MatTableDataSource } from '@angular/material';\r\nimport { SpinnerService } from 'src/app/core/spinner.service';\r\nimport { Author } from '../models/author';\r\nimport { DeleteautorComponent } from './deleteautor/deleteautor.component';\r\nimport { AddEditAutorComponent } from './add-edit-autor/add-edit-autor.component';\r\nimport { AutoriService } from './autori.service';\r\n\r\n@Component({\r\n  selector: 'app-autori',\r\n  templateUrl: './autori.component.html',\r\n  styleUrls: ['./autori.component.scss']\r\n})\r\nexport class AutoriComponent implements OnInit, AfterViewInit {\r\n    \r\n    ngAfterViewInit(): void {\r\n        this.dataSource.sort = this.sort;\r\n        this.dataSource.paginator = this.paginator;\r\n    }\r\n\r\n\r\n    @Output() titled = new EventEmitter<string>();\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n    autori: Author[] = [];\r\n    _addAuthor: Author;\r\n    displayedColumns: string[] = ['authorId', 'name', 'birthDay', 'birthplace', 'description', 'actions'];\r\n    dataSource: MatTableDataSource<Author> = new MatTableDataSource(this.autori);\r\n\r\n    constructor(private titleService: TitleService,\r\n        public dialog: MatDialog,\r\n        private snackBar: MatSnackBar,\r\n        private spinnerService: SpinnerService,\r\n        private autoriService: AutoriService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.titleService.getTitle(\"Autori\");\r\n\r\n        this.getAutori();\r\n\r\n    }\r\n\r\n    getAutori() {\r\n       \r\n        this.autoriService.getAutori().subscribe(\r\n            data => {\r\n                this.autori = data;\r\n                this.dataSource = new MatTableDataSource(this.autori);\r\n                this.dataSource.sort = this.sort;\r\n                this.dataSource.paginator = this.paginator;\r\n            });\r\n    }\r\n\r\n\r\n    applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n\r\n\r\n    deleteAuthor(item: Author): void {\r\n        const dialogRef = this.dialog.open(DeleteautorComponent, {\r\n            width: '250px',\r\n            data: item\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log(result);\r\n\r\n            if (result != undefined) {\r\n\r\n                this.spinnerService.spin$.next(true);\r\n\r\n                this.autoriService.deleteAuthor(item).subscribe(\r\n                    (response) => {\r\n                        this.spinnerService.spin$.next(false);\r\n                        this.snackBar.open(\"Genul a fost sters cu succes!\", null, {\r\n                            duration: 3000,\r\n                            panelClass: \"text-success\"\r\n                        });\r\n                        this.getAutori();\r\n\r\n                    },\r\n                    (error) => {\r\n                        this.spinnerService.spin$.next(false);\r\n                        this.snackBar.open(\"A aparut o eroare, incearca din nou!\", \"\", {\r\n                            duration: 3000,\r\n                            panelClass: \"text-danger\"\r\n                        });\r\n                    }\r\n                )\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    AddAuthor() {\r\n        const dialogRef = this.dialog.open(AddEditAutorComponent, {\r\n            width: '400px',\r\n            data: {\r\n                type: \"add\",\r\n                autor: this._addAuthor\r\n            }\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n\r\n            if (result != undefined && result != null) {\r\n\r\n                this.AddAuthorConfirm(result.autor);\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    AddAuthorConfirm(author: Author) {\r\n\r\n        this.spinnerService.spin$.next(true);\r\n\r\n        this.autoriService.addAuthor(author).subscribe(\r\n            (response) => {\r\n                this.spinnerService.spin$.next(false);\r\n                this.snackBar.open(\"Genul a fost adaugat cu succes!\", null, {\r\n                    duration: 3000,\r\n                    panelClass: \"text-success\"\r\n                });\r\n                this.getAutori();\r\n\r\n            },\r\n            (error) => {\r\n                this.spinnerService.spin$.next(false);\r\n                this.snackBar.open(\"A aparut o eroare, incearca din nou!\", \"\", {\r\n                    duration: 3000,\r\n                    panelClass: \"text-danger\"\r\n                });\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    EditAuthor(item: Author) {\r\n        const dialogRef = this.dialog.open(AddEditAutorComponent, {\r\n            width: '400px',\r\n            data: {\r\n                type: \"edit\",\r\n                autor: Object.assign({}, item)\r\n            },\r\n            panelClass: \"formFieldWidth\"\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            this.EditAuthorConfirm(result.autor);\r\n        });\r\n    }\r\n\r\n    EditAuthorConfirm(author: Author) {\r\n\r\n        this.spinnerService.spin$.next(true);\r\n\r\n        this.autoriService.editAuthor(author).subscribe(\r\n            (response) => {\r\n                this.spinnerService.spin$.next(false);\r\n                this.snackBar.open(\"Genul a fost modificat cu succes!\", null, {\r\n                    duration: 3000,\r\n                    panelClass: \"text-success\"\r\n                });\r\n                this.getAutori();\r\n\r\n            },\r\n            (error) => {\r\n                this.spinnerService.spin$.next(false);\r\n                this.snackBar.open(\"A aparut o eroare, incearca din nou!\", \"\", {\r\n                    duration: 3000,\r\n                    panelClass: \"text-danger\"\r\n                });\r\n            }\r\n        );\r\n\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Author } from '../models/author';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AutoriService {\r\n\r\n    private baseUrl: string;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.baseUrl = \"/api/Authors/\";\r\n    }\r\n\r\n    getAutori(): Observable<Author[]> {\r\n        return this.http.get<Author[]>(this.baseUrl);\r\n    }\r\n\r\n    deleteAuthor(author: Author): Observable<Author> {\r\n        return this.http.delete<Author>(this.baseUrl + author.authorId);\r\n    }\r\n\r\n    addAuthor(author: Author): Observable<Author> {\r\n        return this.http.post<Author>(this.baseUrl, author);\r\n    }\r\n\r\n    editAuthor(author: Author): Observable<any> {\r\n        return this.http.put(this.baseUrl + author.authorId, author);\r\n    }\r\n}\r\n","module.exports = \"<h1 mat-dialog-title fxLayoutAlign=\\\"center center\\\">Sterge autor</h1>\\r\\n<div mat-dialog-content>\\r\\n    <p>Esti sigur ca vrei sa stergi autorul <b>{{data.name}}</b> cu id-ul <b>{{data.authorId}}</b>?</p>\\r\\n</div>\\r\\n<div mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n    <button mat-button color=\\\"warn\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>\\r\\n        <mat-icon>delete</mat-icon> Da\\r\\n    </button>\\r\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"onNoClick()\\\">\\r\\n        <mat-icon>close</mat-icon> Nu\\r\\n    </button>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2F1dG9yaS9kZWxldGVhdXRvci9kZWxldGVhdXRvci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Author } from '../../models/author';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\n@Component({\n  selector: 'app-deleteautor',\n  templateUrl: './deleteautor.component.html',\n  styleUrls: ['./deleteautor.component.scss']\n})\nexport class DeleteautorComponent implements OnInit {\n\n    constructor(public dialogRef: MatDialogRef<DeleteautorComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: Author) { }\n\n      ngOnInit() {\n      }\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\n}\n","module.exports = \"<h1 mat-dialog-title fxLayoutAlign=\\\"center center\\\">\\r\\n    <span *ngIf=\\\"data.type=='add'\\\">\\r\\n        Adauga carte\\r\\n    </span>\\r\\n    <span *ngIf=\\\"data.type=='edit'\\\">\\r\\n        Editeaza carte\\r\\n    </span>\\r\\n</h1>\\r\\n<div mat-dialog-content class=\\\"example-container\\\">\\r\\n    <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n            <mat-form-field fxFlex *ngIf=\\\"data.type=='edit'\\\">\\r\\n                <input matInput placeholder=\\\"Id carte\\\" disabled [(ngModel)]=\\\"data.book.bookId\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field fxFlex>\\r\\n                <input matInput placeholder=\\\"Titlu carte\\\" [(ngModel)]=\\\"data.book.title\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n            <mat-form-field fxFlex>\\r\\n                <input matInput placeholder=\\\"ISBN\\\" [(ngModel)]=\\\"data.book.isbn\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field fxFlex>\\r\\n                <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Data aparitie\\\" [(ngModel)]=\\\"data.book.year\\\" disabled mat-datepicker-toggle>\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker #picker disabled=\\\"false\\\"></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n            <mat-form-field fxFlex>\\r\\n                <input matInput placeholder=\\\"URL imagine\\\" [(ngModel)]=\\\"data.book.imageUrl\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field fxFlex>\\r\\n                <input matInput placeholder=\\\"Editura\\\" [(ngModel)]=\\\"data.book.editura\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"input-row\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n            <mat-form-field fxFlex>\\r\\n                <input matInput placeholder=\\\"Limba\\\" [(ngModel)]=\\\"data.book.language\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field fxFlex>\\r\\n                <input type=\\\"number\\\" matInput placeholder=\\\"Pret cumparare\\\" [(ngModel)]=\\\"data.book.buyPrice\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field fxFlex>\\r\\n                <input type=\\\"number\\\" matInput placeholder=\\\"Nr pagini\\\" [(ngModel)]=\\\"data.book.nrOfPages\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"input-row\\\">\\r\\n            <mat-form-field fxFlex>\\r\\n                <textarea rows=\\\"3\\\" matInput placeholder=\\\"Descriere\\\" [(ngModel)]=\\\"data.book.description\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"input-row\\\">\\r\\n            <mat-form-field class=\\\"example-chip-list\\\" fxFlex>\\r\\n                <mat-chip-list #chipListA>\\r\\n                    <mat-chip *ngFor=\\\"let autor of autoriSelected\\\"\\r\\n                              [selectable]=\\\"selectable\\\"\\r\\n                              [removable]=\\\"removable\\\"\\r\\n                              (removed)=\\\"removeAutor(autor)\\\">\\r\\n                        {{autor.name}}\\r\\n                        <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n                    </mat-chip>\\r\\n                    <input placeholder=\\\"Autori...\\\"\\r\\n                           #autorInput\\r\\n                           [formControl]=\\\"autorCtrl\\\"\\r\\n                           [matAutocomplete]=\\\"autoa\\\"\\r\\n                           [matChipInputFor]=\\\"chipListA\\\"\\r\\n                           [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\r\\n                           [matChipInputAddOnBlur]=\\\"addOnBlur\\\">\\r\\n                </mat-chip-list>\\r\\n                <mat-autocomplete #autoa=\\\"matAutocomplete\\\" (optionSelected)=\\\"selectedAutor($event)\\\">\\r\\n                    <mat-option *ngFor=\\\"let autor of data.autori\\\" [value]=\\\"autor\\\">\\r\\n                        {{autor.name}}\\r\\n                    </mat-option>\\r\\n                </mat-autocomplete>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"input-row\\\">\\r\\n            <mat-form-field class=\\\"example-chip-list\\\" fxFlex>\\r\\n                <mat-chip-list #chipListG>\\r\\n                    <mat-chip *ngFor=\\\"let genre of genresSelected\\\"\\r\\n                              [selectable]=\\\"selectable\\\"\\r\\n                              [removable]=\\\"removable\\\"\\r\\n                              (removed)=\\\"removeGenre(genre)\\\">\\r\\n                        {{genre.name}}\\r\\n                        <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n                    </mat-chip>\\r\\n                    <input placeholder=\\\"Genuri...\\\"\\r\\n                           #genreInput\\r\\n                           [formControl]=\\\"genreCtrl\\\"\\r\\n                           [matAutocomplete]=\\\"autog\\\"\\r\\n                           [matChipInputFor]=\\\"chipListG\\\"\\r\\n                           [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\r\\n                           [matChipInputAddOnBlur]=\\\"addOnBlur\\\">\\r\\n                </mat-chip-list>\\r\\n                <mat-autocomplete #autog=\\\"matAutocomplete\\\" (optionSelected)=\\\"selectedGenre($event)\\\">\\r\\n                    <mat-option *ngFor=\\\"let genre of data.genres\\\" [value]=\\\"genre\\\">\\r\\n                        {{genre.name}}\\r\\n                    </mat-option>\\r\\n                </mat-autocomplete>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"input-row\\\">\\r\\n            <mat-form-field class=\\\"example-chip-list\\\" fxFlex>\\r\\n                <mat-chip-list #chipListS>\\r\\n                    <mat-chip *ngFor=\\\"let store of storesSelected\\\"\\r\\n                              [selectable]=\\\"selectable\\\"\\r\\n                              [removable]=\\\"removable\\\"\\r\\n                              (removed)=\\\"removeStore(store)\\\">\\r\\n                        {{store.name}}\\r\\n                        <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n                    </mat-chip>\\r\\n                    <input placeholder=\\\"Biblioteci...\\\"\\r\\n                           #genreInput\\r\\n                           [formControl]=\\\"genreCtrl\\\"\\r\\n                           [matAutocomplete]=\\\"autos\\\"\\r\\n                           [matChipInputFor]=\\\"chipListS\\\"\\r\\n                           [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\r\\n                           [matChipInputAddOnBlur]=\\\"addOnBlur\\\">\\r\\n                </mat-chip-list>\\r\\n                <mat-autocomplete #autos=\\\"matAutocomplete\\\" (optionSelected)=\\\"selectedStore($event)\\\">\\r\\n                    <mat-option *ngFor=\\\"let store of data.stores\\\" [value]=\\\"store\\\">\\r\\n                        {{store.name}}\\r\\n                    </mat-option>\\r\\n                </mat-autocomplete>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div>\\r\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"storeId\\\">\\r\\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> Id. </mat-header-cell>\\r\\n                    <mat-cell mat-cell *matCellDef=\\\"let element\\\"> {{element.storeId}} </mat-cell>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"store.name\\\">\\r\\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Nume </mat-header-cell>\\r\\n                    <mat-cell mat-cell *matCellDef=\\\"let element\\\"> {{element.store.name}} </mat-cell>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"store.address\\\">\\r\\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Adresa </mat-header-cell>\\r\\n                    <mat-cell mat-cell *matCellDef=\\\"let element\\\"> {{element.store.address}} </mat-cell>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"stock\\\">\\r\\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> Stock. </mat-header-cell>\\r\\n                    <mat-cell mat-cell *matCellDef=\\\"let element\\\">\\r\\n                        <mat-form-field class=\\\"example-full-width\\\">\\r\\n                            <input matInput placeholder=\\\"Stock\\\" [(ngModel)]=\\\"element.stock\\\">\\r\\n                        </mat-form-field>\\r\\n                    </mat-cell>\\r\\n                </ng-container>\\r\\n\\r\\n                <mat-header-row mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n                <mat-row mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n\\r\\n\\r\\n            </table>\\r\\n            <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20, 30]\\\" showFirstLastButtons></mat-paginator>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n<div mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"onYesClick()\\\" cdkFocusInitial *ngIf=\\\"data.type=='add'\\\">\\r\\n        <mat-icon>add</mat-icon> Adauga\\r\\n    </button>\\r\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"onYesClick()\\\" cdkFocusInitial *ngIf=\\\"data.type=='edit'\\\">\\r\\n        <mat-icon>save</mat-icon> Salveaza\\r\\n    </button>\\r\\n    <button mat-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\">\\r\\n        <mat-icon>close</mat-icon> Renunta\\r\\n    </button>\\r\\n</div>\\r\\n\"","module.exports = \"table {\\n  width: 100%;\\n  overflow: auto; }\\n\\n.input-row {\\n  margin-bottom: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vYm9va3MvYWRkLWVkaXQtYm9vay9DOlxcVXNlcnNcXGFuZHJlaS5mdW5hcnVcXERlc2t0b3BcXEZhY3VsdGF0ZVxcREFXXFxMaWJyYXJ5XFxCaWJsaW90ZWNhT25saW5lXFxCaWJsaW90ZWNhT25saW5lL3NyY1xcYXBwXFxhZG1pblxcYm9va3NcXGFkZC1lZGl0LWJvb2tcXGFkZC1lZGl0LWJvb2suY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFXO0VBQ1gsZUFBYSxFQUNoQjs7QUFFRDtFQUNJLG9CQUFrQixFQUNyQiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Jvb2tzL2FkZC1lZGl0LWJvb2svYWRkLWVkaXQtYm9vay5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxle1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBvdmVyZmxvdzphdXRvO1xyXG59XHJcblxyXG4uaW5wdXQtcm93e1xyXG4gICAgbWFyZ2luLWJvdHRvbToxMHB4O1xyXG59Il19 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Book } from '../../models/book';\r\nimport { Author } from '../../models/author';\r\nimport { Genre } from '../../models/genre';\r\nimport { Store } from '../../models/store';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatTableDataSource, MatSort, MatPaginator, MatSnackBar } from '@angular/material';\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport {  ElementRef, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatAutocompleteSelectedEvent, MatChipInputEvent, MatAutocomplete } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { BookGenre } from '../../models/book-genre';\r\nimport { BookAuthor } from '../../models/book-author';\r\nimport { BookStore } from '../../models/book-store';\r\n\r\ninterface Data {\r\n    type: string;\r\n    book: Book;\r\n    autori: Author[];\r\n    genres: Genre[];\r\n    stores: Store[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-add-edit-book',\r\n  templateUrl: './add-edit-book.component.html',\r\n  styleUrls: ['./add-edit-book.component.scss']\r\n})\r\nexport class AddEditBookComponent implements OnInit {\r\n\r\n    genresSelected: Genre[];\r\n    autoriSelected: Author[];\r\n    storesSelected: Store[];\r\n    bookStoresSelected: BookStore[];\r\n    visible = true;\r\n    selectable = true;\r\n    removable = true;\r\n    addOnBlur = true;\r\n    separatorKeysCodes: number[] = [ENTER, COMMA];\r\n    genreCtrl = new FormControl();\r\n    autorCtrl = new FormControl();\r\n    \r\n    @ViewChild('genreInput') genreInput: ElementRef<HTMLInputElement>;\r\n    @ViewChild('autorInput') autorInput: ElementRef<HTMLInputElement>;\r\n    @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n    displayedColumns: string[] = ['storeId', 'store.name', 'store.address', 'stock'];\r\n    dataSource: MatTableDataSource<BookStore> = new MatTableDataSource(this.bookStoresSelected);\r\n\r\n    constructor(public dialogRef: MatDialogRef<AddEditBookComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: Data,\r\n        private snackBar: MatSnackBar) {\r\n\r\n    \r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        if (this.data.book == null || this.data.book == undefined) {\r\n            this.data.book = new Book();\r\n        } else {\r\n            this.genresSelected = this.data.book.bookGenres == undefined ? [] : this.data.book.bookGenres.map(e => e.genre);\r\n            this.autoriSelected = this.data.book.bookAuthors == undefined ? [] : this.data.book.bookAuthors.map(e => e.author); \r\n            this.storesSelected = this.data.book.bookStores == undefined ? [] : this.data.book.bookStores.map(e => e.store); \r\n            this.bookStoresSelected = Object.assign([], this.data.book.bookStores);\r\n\r\n            this.data.genres = this.genresSelected.length == 0 ? this.data.genres:  this.data.genres.filter(e => !this.genresSelected.find(z => z.genreId == e.genreId));\r\n            this.data.autori = this.data.autori.filter(e => !this.autoriSelected.find(z => z.authorId == e.authorId));\r\n            this.data.stores = this.data.stores.filter(e => !this.storesSelected.find(z => z.storeId == e.storeId));\r\n\r\n            this.dataSource = new MatTableDataSource(this.bookStoresSelected);\r\n            this.dataSource.sort = this.sort;\r\n            this.dataSource.paginator = this.paginator;\r\n\r\n        }\r\n        \r\n    }\r\n    \r\n    removeGenre(genre: Genre): void {\r\n        const index = this.genresSelected.indexOf(genre);\r\n\r\n        if (index >= 0) {\r\n            this.genresSelected.splice(index, 1);\r\n\r\n            this.data.genres.push(genre);\r\n        }\r\n    }\r\n\r\n    selectedGenre(event: MatAutocompleteSelectedEvent): void {\r\n        this.genresSelected.push(event.option.value as Genre);\r\n        this.genreInput.nativeElement.blur();\r\n        let gid = this.data.genres.indexOf(event.option.value as Genre);\r\n        this.data.genres.splice(gid, 1);\r\n    }\r\n\r\n    removeAutor(autor: Author): void {\r\n        const index = this.autoriSelected.indexOf(autor);\r\n\r\n        if (index >= 0) {\r\n            this.autoriSelected.splice(index, 1);\r\n\r\n            this.data.autori.push(autor);\r\n        }\r\n    }\r\n\r\n    selectedAutor(event: MatAutocompleteSelectedEvent): void {\r\n        this.autoriSelected.push(event.option.value as Author);\r\n        this.autorInput.nativeElement.blur();\r\n        let gid = this.data.autori.indexOf(event.option.value as Author);\r\n        this.data.autori.splice(gid, 1);\r\n    }\r\n\r\n    removeStore(store: Store): void {\r\n        const index = this.storesSelected.indexOf(store);\r\n        const index1 = this.bookStoresSelected.map(e => e.store).indexOf(store);\r\n\r\n        if (index >= 0) {\r\n            this.storesSelected.splice(index, 1);\r\n            this.bookStoresSelected.splice(index1, 1);\r\n\r\n            this.dataSource = new MatTableDataSource(this.bookStoresSelected);\r\n            this.dataSource.sort = this.sort;\r\n            this.dataSource.paginator = this.paginator;\r\n\r\n            this.data.stores.push(store);\r\n        }\r\n    }\r\n\r\n    selectedStore(event: MatAutocompleteSelectedEvent): void {\r\n        this.storesSelected.push(event.option.value as Store);\r\n\r\n        this.bookStoresSelected.unshift(<BookStore>{\r\n            store: <Store>event.option.value,\r\n            storeId: (<Store>event.option.value).storeId,\r\n            book: this.data.book,\r\n            bookId: this.data.book.bookId,\r\n            stock: 0\r\n\r\n        });\r\n\r\n        this.dataSource = new MatTableDataSource(this.bookStoresSelected);\r\n        this.dataSource.sort = this.sort;\r\n        this.dataSource.paginator = this.paginator;\r\n        \r\n        this.autorInput.nativeElement.blur();\r\n        let gid = this.data.stores.indexOf(event.option.value as Store);\r\n        this.data.stores.splice(gid, 1);\r\n    }\r\n\r\n    onYesClick() {\r\n\r\n        if (this.bookStoresSelected.filter(e => e.stock <= 0).length > 0) {\r\n            this.snackBar.open(\"Completeaza stocurile bibliotecilor!\", \"\", {\r\n                duration: 3000,\r\n                panelClass: \"text-danger\"\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.data.book.bookGenres = this.genresSelected.map(e => <BookGenre>{ bookId: this.data.book.bookId, genreId: e.genreId, genre: e });\r\n        this.data.book.bookAuthors = this.autoriSelected.map(e => <BookAuthor>{ bookId: this.data.book.bookId, authorId: e.authorId, author: e });\r\n        this.data.book.bookStores = this.bookStoresSelected.map(e => <BookStore>{ bookId: this.data.book.bookId, storeId: e.storeId, stock: e.stock });\r\n        \r\n\r\n        this.dialogRef.close(this.data);\r\n    }\r\n    \r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n}","module.exports = \"\\r\\n<div fxLayout=\\\"row\\\">\\r\\n    <mat-form-field fxFlex>\\r\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n    </mat-form-field>\\r\\n    <div fxFlex=\\\"2 2 calc(10em + 10px)\\\"></div>\\r\\n    <div fxFlex fxLayoutAlign=\\\"end center\\\">\\r\\n        <button mat-button color=\\\"accent\\\" (click)=\\\"AddBook()\\\">\\r\\n            <mat-icon>add</mat-icon> Adauga\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"imageUrl\\\">\\r\\n            <mat-header-cell *matHeaderCellDef mat-sort-header></mat-header-cell>\\r\\n            <mat-cell mat-cell *matCellDef=\\\"let element\\\">\\r\\n                <img [src]=\\\"element.imageUrl\\\" class=\\\"img-fluid img-thumbnail\\\">\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"bookId\\\">\\r\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> Id. </mat-header-cell>\\r\\n            <mat-cell mat-cell *matCellDef=\\\"let element\\\"> {{element.bookId}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"title\\\">\\r\\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Titlu </mat-header-cell>\\r\\n            <mat-cell mat-cell *matCellDef=\\\"let element\\\"> {{element.title}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"isbn\\\">\\r\\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> ISBN </mat-header-cell>\\r\\n            <mat-cell mat-cell *matCellDef=\\\"let element\\\"> {{element.isbn}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"year\\\">\\r\\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Data aparitie </mat-header-cell>\\r\\n            <mat-cell mat-cell *matCellDef=\\\"let element\\\"> {{element.year | date:'MMMM-yyyy'}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"editura\\\">\\r\\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Editura </mat-header-cell>\\r\\n            <mat-cell mat-cell *matCellDef=\\\"let element\\\"> {{element.editura}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"language\\\">\\r\\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Limba </mat-header-cell>\\r\\n            <mat-cell mat-cell *matCellDef=\\\"let element\\\"> {{element.language}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"nrOfPages\\\">\\r\\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Nr. pagini </mat-header-cell>\\r\\n            <mat-cell mat-cell *matCellDef=\\\"let element\\\"> {{element.nrOfPages | number}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"buyPrice\\\">\\r\\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Pret cumparare </mat-header-cell>\\r\\n            <mat-cell mat-cell *matCellDef=\\\"let element\\\"> {{element.buyPrice | number}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"actions\\\">\\r\\n            <mat-header-cell mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n            <mat-cell mat-cell *matCellDef=\\\"let element\\\" fxLayoutAlign=\\\"end center\\\">\\r\\n                <button mat-button color=\\\"primary\\\" (click)=\\\"EditBook(element)\\\">Edit</button>\\r\\n                <button mat-button color=\\\"warn\\\" (click)=\\\"deleteBook(element)\\\">Delete</button>\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <mat-header-row mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n        <mat-row mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n\\r\\n\\r\\n    </table>\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20, 30]\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.img-thumbnail {\\n  max-height: 75px;\\n  max-width: 75px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vYm9va3MvQzpcXFVzZXJzXFxhbmRyZWkuZnVuYXJ1XFxEZXNrdG9wXFxGYWN1bHRhdGVcXERBV1xcTGlicmFyeVxcQmlibGlvdGVjYU9ubGluZVxcQmlibGlvdGVjYU9ubGluZS9zcmNcXGFwcFxcYWRtaW5cXGJvb2tzXFxib29rcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQVcsRUFDZDs7QUFFRDtFQUNJLGlCQUFlO0VBQ2YsZ0JBQWMsRUFDakIiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9ib29rcy9ib29rcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uaW1nLXRodW1ibmFpbHtcclxuICAgIG1heC1oZWlnaHQ6NzVweDtcclxuICAgIG1heC13aWR0aDo3NXB4O1xyXG59Il19 */\"","import { Component, OnInit, AfterViewInit, Output, ViewChild, EventEmitter } from '@angular/core';\r\nimport { TitleService } from '../shared/title.service';\r\nimport { MatSort, MatPaginator, MatDialog, MatSnackBar, MatTableDataSource } from '@angular/material';\r\nimport { SpinnerService } from 'src/app/core/spinner.service';\r\nimport { Book } from '../models/book';\nimport { BooksService } from './books.service';\r\nimport { DeletebookComponent } from './deletebook/deletebook.component';\r\nimport { AddEditBookComponent } from './add-edit-book/add-edit-book.component';\r\nimport { AutoriService } from '../autori/autori.service';\r\nimport { GenresService } from '../genres/genres.service';\r\nimport { StoresService } from '../stores/stores.service';\r\nimport { Store } from '../models/store';\r\nimport { Author } from '../models/author';\r\nimport { Genre } from '../models/genre';\r\n\n@Component({\n  selector: 'app-books',\n  templateUrl: './books.component.html',\n  styleUrls: ['./books.component.scss']\n})\nexport class BooksComponent implements OnInit, AfterViewInit {\n\n    stores: Store[];\r\n    autori: Author[];\r\n    genres: Genre[];\r\n\r\n    ngAfterViewInit(): void {\r\n        this.dataSource.sort = this.sort;\r\n        this.dataSource.paginator = this.paginator;\r\n    }\r\n\r\n\r\n    @Output() titled = new EventEmitter<string>();\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n    books: Book[] = [];\r\n    _addBook: Book;\r\n    displayedColumns: string[] = ['imageUrl', 'bookId', 'title', 'isbn', 'year', 'editura', 'language', 'nrOfPages', 'buyPrice', 'actions'];\r\n    dataSource: MatTableDataSource<Book> = new MatTableDataSource(this.books);\r\n\r\n    constructor(private titleService: TitleService,\r\n        public dialog: MatDialog,\r\n        private snackBar: MatSnackBar,\r\n        private spinnerService: SpinnerService,\r\n        private booksService: BooksService,\r\n        private autoriService: AutoriService,\r\n        private genresService: GenresService,\r\n        private storesService: StoresService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.titleService.getTitle(\"Books\");\r\n\r\n        this.getBooks();\r\n        this.getAutori();\r\n        this.getGenres();\r\n        this.getStores();\r\n\r\n    }\r\n    getStores(): any {\r\n        this.storesService.getStores().subscribe(\r\n            data => this.stores = data\r\n        );\r\n    }\r\n    getAutori(): any {\r\n        this.autoriService.getAutori().subscribe(\r\n            data => this.autori = data\r\n        );\r\n    }\r\n    getGenres(): any {\r\n        this.genresService.getGenres().subscribe(\r\n            data => this.genres = data\r\n        );\r\n    }\r\n\r\n    getBooks() {\r\n\r\n        this.booksService.getBooks().subscribe(\r\n            data => {\r\n                this.books = data;\r\n                this.dataSource = new MatTableDataSource(this.books);\r\n                this.dataSource.sort = this.sort;\r\n                this.dataSource.paginator = this.paginator;\r\n            });\r\n    }\r\n\r\n    \r\n\r\n\r\n    applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n\r\n\r\n    deleteBook(item: Book): void {\r\n        const dialogRef = this.dialog.open(DeletebookComponent, {\r\n            width: '250px',\r\n            data: item\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log(result);\r\n\r\n            if (result != undefined) {\r\n\r\n                this.spinnerService.spin$.next(true);\r\n\r\n                this.booksService.deleteBook(item).subscribe(\r\n                    (response) => {\r\n                        this.spinnerService.spin$.next(false);\r\n                        this.snackBar.open(\"Genul a fost sters cu succes!\", null, {\r\n                            duration: 3000,\r\n                            panelClass: \"text-success\"\r\n                        });\r\n                        this.getBooks();\r\n\r\n                    },\r\n                    (error) => {\r\n                        this.spinnerService.spin$.next(false);\r\n                        this.snackBar.open(\"A aparut o eroare, incearca din nou!\", \"\", {\r\n                            duration: 3000,\r\n                            panelClass: \"text-danger\"\r\n                        });\r\n                    }\r\n                )\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    AddBook() {\r\n        const dialogRef = this.dialog.open(AddEditBookComponent, {\r\n            width: '1200px',\r\n            data: {\r\n                type: \"add\",\r\n                book: new Book(),\r\n                genres: Object.assign([], this.genres == undefined ? [] : this.genres),\r\n                autori: Object.assign([], this.autori == undefined ? [] : this.autori),\r\n                stores: Object.assign([], this.stores == undefined ? [] : this.stores)\r\n            },\r\n            panelClass: \"formFieldWidth\"\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n\r\n            this.AddBookConfirm(result.book);\r\n            console.log(this.autori);\r\n            console.log(this.genres);\r\n        });\r\n\r\n    }\r\n\r\n    AddBookConfirm(book: Book) {\r\n\r\n        this.spinnerService.spin$.next(true);\r\n\r\n        this.booksService.addBook(book).subscribe(\r\n            (response) => {\r\n                this.spinnerService.spin$.next(false);\r\n                this.snackBar.open(\"Genul a fost adaugat cu succes!\", null, {\r\n                    duration: 3000,\r\n                    panelClass: \"text-success\"\r\n                });\r\n                this.getBooks();\r\n\r\n            },\r\n            (error) => {\r\n                this.spinnerService.spin$.next(false);\r\n                this.snackBar.open(\"A aparut o eroare, incearca din nou!\", \"\", {\r\n                    duration: 3000,\r\n                    panelClass: \"text-danger\"\r\n                });\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    EditBook(item: Book) {\r\n        const dialogRef = this.dialog.open(AddEditBookComponent, {\r\n            width: '1200px',\r\n            data: {\r\n                type: \"edit\",\r\n                book: Object.assign({}, item),\r\n                genres: Object.assign([], this.genres == undefined ? [] : this.genres),\r\n                autori: Object.assign([], this.autori == undefined ? [] : this.autori),\r\n                stores: Object.assign([], this.stores == undefined ? [] : this.stores)\r\n            },\r\n            panelClass: \"formFieldWidth\"\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n\r\n            if (result != undefined) {\r\n\r\n                this.EditBookConfirm(result.book);\r\n            }\r\n            \r\n        });\r\n    }\r\n\r\n    EditBookConfirm(book: Book) {\r\n\r\n        this.spinnerService.spin$.next(true);\r\n\r\n        this.booksService.editBook(book).subscribe(\r\n            (response) => {\r\n                this.spinnerService.spin$.next(false);\r\n                this.snackBar.open(\"Cartea a fost modificata cu succes!\", null, {\r\n                    duration: 3000,\r\n                    panelClass: \"text-success\"\r\n                });\r\n                this.getBooks();\r\n\r\n            },\r\n            (error) => {\r\n                this.spinnerService.spin$.next(false);\r\n                this.snackBar.open(\"A aparut o eroare, incearca din nou!\", \"\", {\r\n                    duration: 3000,\r\n                    panelClass: \"text-danger\"\r\n                });\r\n            }\r\n        );\r\n\r\n    }\r\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Book } from '../models/book';\r\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BooksService {\n    private baseUrl: string;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.baseUrl = \"/api/Books/\";\r\n    }\r\n\r\n    getBooks(): Observable<Book[]> {\r\n        return this.http.get<Book[]>(this.baseUrl);\r\n    }\r\n\r\n    deleteBook(book: Book): Observable<Book> {\r\n        return this.http.delete<Book>(this.baseUrl + book.bookId);\r\n    }\r\n\r\n    addBook(book: Book): Observable<Book> {\r\n        return this.http.post<Book>(this.baseUrl, book);\r\n    }\r\n\r\n    editBook(book: Book): Observable<any> {\r\n        return this.http.put(this.baseUrl + book.bookId, book);\r\n    }\r\n}","module.exports = \"<h1 mat-dialog-title fxLayoutAlign=\\\"center center\\\">Sterge carte</h1>\\r\\n<div mat-dialog-content>\\r\\n    <p>Esti sigur ca vrei sa stergi autorul <b>{{data.title}}</b> cu id-ul <b>{{data.bookId}}</b>?</p>\\r\\n</div>\\r\\n<div mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n    <button mat-button color=\\\"warn\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>\\r\\n        <mat-icon>delete</mat-icon> Da\\r\\n    </button>\\r\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"onNoClick()\\\">\\r\\n        <mat-icon>close</mat-icon> Nu\\r\\n    </button>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Jvb2tzL2RlbGV0ZWJvb2svZGVsZXRlYm9vay5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Book } from '../../models/book';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\n@Component({\n  selector: 'app-deletebook',\n  templateUrl: './deletebook.component.html',\n  styleUrls: ['./deletebook.component.scss']\n})\nexport class DeletebookComponent implements OnInit {\n\n    constructor(public dialogRef: MatDialogRef<DeletebookComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: Book) { }\n\n    ngOnInit() {\n    }\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\n}\n","module.exports = \"<h1 mat-dialog-title fxLayoutAlign=\\\"center center\\\">\\r\\n    <span *ngIf=\\\"data.type=='add'\\\">\\r\\n        Adauga gen\\r\\n    </span>\\r\\n    <span *ngIf=\\\"data.type=='edit'\\\">\\r\\n        Editeaza gen\\r\\n    </span>\\r\\n</h1>\\r\\n<div mat-dialog-content class=\\\"example-container\\\" fxLayout=\\\"column\\\">\\r\\n    <div class=\\\"input-row\\\" *ngIf=\\\"data.type=='edit'\\\">\\r\\n        <mat-form-field fxFlex>\\r\\n            <input matInput placeholder=\\\"Id gen\\\" disabled [ngModel]=\\\"data.genre.genreId\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"input-row\\\">\\r\\n        <mat-form-field fxFlex>\\r\\n            <input matInput placeholder=\\\"Nume gen\\\" [(ngModel)]=\\\"data.genre.name\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n</div>\\r\\n<div mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n    <button mat-button color=\\\"primary\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial *ngIf=\\\"data.type=='add'\\\">\\r\\n        <mat-icon>add</mat-icon> Adauga\\r\\n    </button>\\r\\n    <button mat-button color=\\\"primary\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial *ngIf=\\\"data.type=='edit'\\\">\\r\\n        <mat-icon>save</mat-icon> Salveaza\\r\\n    </button>\\r\\n    <button mat-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\">\\r\\n        <mat-icon>close</mat-icon> Renunta\\r\\n    </button>\\r\\n</div>\\r\\n\"","module.exports = \"/*.example-container  * {\\r\\n    width: 100% !important;\\r\\n}\\r\\n\\r\\n.mat-form-field-wrapper{\\r\\n    width: 100%;\\r\\n}\\r\\n.mat-form-field>*{\\r\\n    width: 100%!important;\\r\\n}\\r\\n\\r\\n.formFieldWidth .mat-form-field-wrapper {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.formFieldWidth .mat-form-field-wrapper {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.formFieldWidth .mat-form-field-flex {\\r\\n    width: 100%;\\r\\n}*/\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vZ2VucmVzL2FkZC1lZGl0LWdlbnJlL0M6XFxVc2Vyc1xcYW5kcmVpLmZ1bmFydVxcRGVza3RvcFxcRmFjdWx0YXRlXFxEQVdcXExpYnJhcnlcXEJpYmxpb3RlY2FPbmxpbmVcXEJpYmxpb3RlY2FPbmxpbmUvc3JjXFxhcHBcXGFkbWluXFxnZW5yZXNcXGFkZC1lZGl0LWdlbnJlXFxhZGQtZWRpdC1nZW5yZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBcUJHIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vZ2VucmVzL2FkZC1lZGl0LWdlbnJlL2FkZC1lZGl0LWdlbnJlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyouZXhhbXBsZS1jb250YWluZXIgICoge1xyXG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcclxufVxyXG5cclxuLm1hdC1mb3JtLWZpZWxkLXdyYXBwZXJ7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG4ubWF0LWZvcm0tZmllbGQ+KntcclxuICAgIHdpZHRoOiAxMDAlIWltcG9ydGFudDtcclxufVxyXG5cclxuLmZvcm1GaWVsZFdpZHRoIC5tYXQtZm9ybS1maWVsZC13cmFwcGVyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uZm9ybUZpZWxkV2lkdGggLm1hdC1mb3JtLWZpZWxkLXdyYXBwZXIge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5mb3JtRmllbGRXaWR0aCAubWF0LWZvcm0tZmllbGQtZmxleCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufSovIl19 */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Genre } from '../../models/genre';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\n\ninterface Data {\n    type: string;\r\n    genre: Genre;\r\n}\n\n@Component({\n  selector: 'app-add-edit-genre',\n  templateUrl: './add-edit-genre.component.html',\n  styleUrls: ['./add-edit-genre.component.scss']\n})\nexport class AddEditGenreComponent implements OnInit {\n\n    nameModal: string = \"\";\n\n    constructor(public dialogRef: MatDialogRef<AddEditGenreComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: Data) { }\n\n    ngOnInit() {\n\n        if (this.data.genre == null || this.data.genre == undefined) {\n            this.data.genre = new Genre();\r\n        }\n        \n  }\n\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\n\n}\n","module.exports = \"<h1 mat-dialog-title fxLayoutAlign=\\\"center center\\\">Sterge gen</h1>\\r\\n<div mat-dialog-content>\\r\\n    <p>Esti sigur ca vrei sa stergi genul <b>{{data.name}}</b>?</p>\\r\\n</div>\\r\\n<div mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n    <button mat-button color=\\\"warn\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>\\r\\n        <mat-icon>delete</mat-icon> Da\\r\\n    </button>\\r\\n    <button mat-button  color=\\\"primary\\\" (click)=\\\"onNoClick()\\\" >\\r\\n        <mat-icon>close</mat-icon> Nu\\r\\n    </button>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2dlbnJlcy9kZWxldGVnZW5yZS9kZWxldGVnZW5yZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Genre } from '../../models/genre';\r\n\r\n@Component({\r\n  selector: 'app-deletegenre',\r\n  templateUrl: './deletegenre.component.html',\r\n  styleUrls: ['./deletegenre.component.scss']\r\n})\r\nexport class DeletegenreComponent implements OnInit {\r\n\r\n    constructor(public dialogRef: MatDialogRef<DeletegenreComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: Genre) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n","module.exports = \"\\r\\n<div fxLayout=\\\"row\\\">\\r\\n    <mat-form-field fxFlex>\\r\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n    </mat-form-field>\\r\\n    <div fxFlex=\\\"2 2 calc(10em + 10px)\\\"></div>\\r\\n    <div fxFlex fxLayoutAlign=\\\"end center\\\">\\r\\n        <button mat-button color=\\\"accent\\\" (click)=\\\"AddGenre()\\\">\\r\\n            <mat-icon>add</mat-icon> Adauga\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"genreId\\\">\\r\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> Id. </mat-header-cell>\\r\\n            <mat-cell mat-cell *matCellDef=\\\"let element\\\"> {{element.genreId}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"name\\\">\\r\\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\r\\n            <mat-cell mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"actions\\\">\\r\\n            <mat-header-cell mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n            <mat-cell mat-cell *matCellDef=\\\"let element\\\" fxLayoutAlign=\\\"end center\\\">\\r\\n                <button mat-button color=\\\"primary\\\" (click)=\\\"EditGenre(element)\\\">Edit</button>\\r\\n                <button mat-button color=\\\"warn\\\" (click)=\\\"deleteGenre(element)\\\">Delete</button>\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <mat-header-row mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n        <mat-row mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n\\r\\n\\r\\n    </table>\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20, 30]\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vZ2VucmVzL0M6XFxVc2Vyc1xcYW5kcmVpLmZ1bmFydVxcRGVza3RvcFxcRmFjdWx0YXRlXFxEQVdcXExpYnJhcnlcXEJpYmxpb3RlY2FPbmxpbmVcXEJpYmxpb3RlY2FPbmxpbmUvc3JjXFxhcHBcXGFkbWluXFxnZW5yZXNcXGdlbnJlcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQVcsRUFDZCIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2dlbnJlcy9nZW5yZXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZXtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59Il19 */\"","import { Component, OnInit, Output, EventEmitter, ViewChild, ChangeDetectorRef, AfterViewChecked, AfterViewInit } from '@angular/core';\r\nimport { TitleService } from '../shared/title.service';\r\nimport { GenresService } from './genres.service';\r\nimport { Genre } from '../models/genre';\r\nimport { MatTableDataSource, MatSort, MatPaginator, MatDialog, MatSnackBar } from '@angular/material';\r\nimport { DeletegenreComponent } from './deletegenre/deletegenre.component';\r\nimport { SpinnerService } from 'src/app/core/spinner.service';\r\nimport { AddEditGenreComponent } from './add-edit-genre/add-edit-genre.component';\r\n\r\n@Component({\r\n  selector: 'app-genres',\r\n  templateUrl: './genres.component.html',\r\n  styleUrls: ['./genres.component.scss']\r\n})\r\nexport class GenresComponent implements OnInit, AfterViewInit {\r\n    ngAfterViewInit(): void {\r\n        this.dataSource.sort = this.sort;\r\n        this.dataSource.paginator = this.paginator;\r\n    }\r\n    \r\n\r\n    @Output() titled = new EventEmitter<string>();\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n    genres: Genre[] = [];\r\n    _addGenre: Genre;\r\n    displayedColumns: string[] = ['genreId', 'name', 'actions'];\r\n    dataSource: MatTableDataSource<Genre> = new MatTableDataSource(this.genres);\r\n\r\n    constructor(private titleService: TitleService,\r\n        private genresService: GenresService,\r\n        public dialog: MatDialog,\r\n        private snackBar: MatSnackBar,\r\n        private spinnerService: SpinnerService\r\n        )\r\n    {\r\n       \r\n     \r\n    }\r\n\r\n    ngOnInit() {\r\n        this.titleService.getTitle(\"Genuri\");\r\n        this.getGenres();\r\n        \r\n    }\r\n\r\n    getGenres() {\r\n        this.genresService.getGenres().subscribe(\r\n            data => {\r\n                this.genres = data;\r\n                this.dataSource = new MatTableDataSource(this.genres);\r\n                this.dataSource.sort = this.sort;\r\n                this.dataSource.paginator = this.paginator;\r\n            });\r\n    }\r\n\r\n\r\n    applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n\r\n\r\n    deleteGenre(item: Genre): void {\r\n        const dialogRef = this.dialog.open(DeletegenreComponent, {\r\n            width: '250px',\r\n            data: item\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log(result);\r\n\r\n            if (result != undefined) {\r\n\r\n                this.spinnerService.spin$.next(true);\r\n\r\n                this.genresService.deleteGenre(item).subscribe(\r\n                    (response) => {\r\n                        this.spinnerService.spin$.next(false);\r\n                        this.snackBar.open(\"Genul a fost sters cu succes!\", null, {\r\n                            duration: 3000,\r\n                            panelClass:\"text-success\"\r\n                        });\r\n                        this.getGenres();\r\n                        \r\n                    },\r\n                    (error) => {\r\n                        this.spinnerService.spin$.next(false);\r\n                        this.snackBar.open(\"A aparut o eroare, incearca din nou!\", \"\", {\r\n                            duration: 3000,\r\n                            panelClass: \"text-danger\"\r\n                        });\r\n                    }\r\n                )\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    AddGenre() {\r\n        const dialogRef = this.dialog.open(AddEditGenreComponent, {\r\n            width: '350px',\r\n            data: {\r\n                type: \"add\",\r\n                genre: this._addGenre\r\n            }\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n\r\n            if (result != undefined && result != null) {\r\n\r\n                this.AddGenreConfirm(result.genre);\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    AddGenreConfirm(genre: Genre) {\r\n\r\n        this.spinnerService.spin$.next(true);\r\n\r\n        this.genresService.addGenre(genre).subscribe(\r\n            (response) => {\r\n                this.spinnerService.spin$.next(false);\r\n                this.snackBar.open(\"Genul a fost adaugat cu succes!\", null, {\r\n                    duration: 3000,\r\n                    panelClass: \"text-success\"\r\n                });\r\n                this.getGenres();\r\n\r\n            },\r\n            (error) => {\r\n                this.spinnerService.spin$.next(false);\r\n                this.snackBar.open(\"A aparut o eroare, incearca din nou!\", \"\", {\r\n                    duration: 3000,\r\n                    panelClass: \"text-danger\"\r\n                });\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    EditGenre(item: Genre) {\r\n        const dialogRef = this.dialog.open(AddEditGenreComponent, {\r\n            width: '350px',\r\n            data: {\r\n                type: \"edit\",\r\n                genre: Object.assign({}, item)\r\n            },\r\n            panelClass: \"formFieldWidth\"\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            this.EditGenreConfirm(result.genre);\r\n        });\r\n    }\r\n\r\n    EditGenreConfirm(genre: Genre) {\r\n\r\n        this.spinnerService.spin$.next(true);\r\n\r\n        this.genresService.editGenre(genre).subscribe(\r\n            (response) => {\r\n                this.spinnerService.spin$.next(false);\r\n                this.snackBar.open(\"Genul a fost modificat cu succes!\", null, {\r\n                    duration: 3000,\r\n                    panelClass: \"text-success\"\r\n                });\r\n                this.getGenres();\r\n\r\n            },\r\n            (error) => {\r\n                this.spinnerService.spin$.next(false);\r\n                this.snackBar.open(\"A aparut o eroare, incearca din nou!\", \"\", {\r\n                    duration: 3000,\r\n                    panelClass: \"text-danger\"\r\n                });\r\n            }\r\n        );\r\n\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Genre } from '../models/genre';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class GenresService {\r\n    \r\n    private baseUrl: string;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.baseUrl = \"/api/Genres/\";\r\n    }\r\n\r\n    getGenres(): Observable<Genre[]> {\r\n        return this.http.get<Genre[]>(this.baseUrl);\r\n    }\r\n\r\n    deleteGenre(genre: Genre): Observable<Genre> {\r\n        return this.http.delete<Genre>(this.baseUrl + genre.genreId);\r\n    }\r\n\r\n    addGenre(genre: Genre): Observable<Genre> {\r\n        return this.http.post<Genre>(this.baseUrl, genre);\r\n    }\r\n\r\n    editGenre(genre: Genre): Observable<any> {\r\n        return this.http.put(this.baseUrl + genre.genreId, genre);\r\n    }\r\n\r\n}\r\n","module.exports = \"<!--<div gdAreas=\\\"menu content\\\"\\r\\n     gdGap=\\\"16px\\\"\\r\\n     gdColumns=\\\"10rem auto\\\">\\r\\n    <div gdArea=\\\"menu\\\">\\r\\n        <button [routerLink]=\\\"['./autori']\\\">\\r\\n            autori\\r\\n        </button>\\r\\n        <button [routerLink]=\\\"['./genres']\\\">\\r\\n            genuri\\r\\n        </button>\\r\\n    </div>\\r\\n    <div gdArea=\\\"content\\\">\\r\\n        <router-outlet>\\r\\n        </router-outlet>\\r\\n    </div>\\r\\n</div>-->\\r\\n\\r\\n\\r\\n<mat-sidenav-container class=\\\"app-sidenav-container\\\">\\r\\n    <mat-sidenav #sidenav class=\\\"app-sidenav mat-elevation-z10\\\" [mode]=\\\"mode.value\\\" [opened]=\\\"opened\\\">\\r\\n        <mat-toolbar (click)=\\\"sidenav.toggle()\\\">\\r\\n            Library Admin\\r\\n        </mat-toolbar>\\r\\n        <mat-nav-list>\\r\\n            <a mat-list-item [routerLink]=\\\"['./autori']\\\" (click)=\\\"sidenav.toggle()\\\">\\r\\n                <i class=\\\"fas fa-users mr-2\\\"></i>Autori\\r\\n            </a>\\r\\n            <a mat-list-item [routerLink]=\\\"['./genres']\\\" (click)=\\\"sidenav.toggle()\\\">\\r\\n                <i class=\\\"fas fa-book mr-2\\\"></i>Genuri\\r\\n            </a>\\r\\n            <a mat-list-item [routerLink]=\\\"['./stores']\\\" (click)=\\\"sidenav.toggle()\\\">\\r\\n                <i class=\\\"fas fa-building mr-2\\\"></i>Biblioteci\\r\\n            </a>\\r\\n            <a mat-list-item [routerLink]=\\\"['./books']\\\" (click)=\\\"sidenav.toggle()\\\">\\r\\n                <i class=\\\"fas fa-book mr-2\\\"></i>Carti\\r\\n            </a>\\r\\n\\r\\n            <a mat-list-item href=\\\"/Identity/Account/Logout\\\" (click)=\\\"sidenav.toggle()\\\">\\r\\n                <i class=\\\"fas fa-power-off mr-1\\\"></i>Delogare\\r\\n            </a>\\r\\n        </mat-nav-list>\\r\\n\\r\\n    </mat-sidenav>\\r\\n\\r\\n    <mat-sidenav-content fxLayout=\\\"column wrap\\\" fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n        <mat-toolbar>\\r\\n            <mat-toolbar-row>\\r\\n                <button mat-icon-button class=\\\"mr-3\\\" (click)=\\\"sidenav.toggle()\\\">\\r\\n                    <mat-icon *ngIf=\\\"!sidenav.opened\\\">menu</mat-icon>\\r\\n                    <mat-icon *ngIf=\\\"sidenav.opened\\\">clear</mat-icon>\\r\\n                </button>\\r\\n                <span>{{pageTitle}}</span>\\r\\n            </mat-toolbar-row>\\r\\n        </mat-toolbar>\\r\\n\\r\\n\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n            <router-outlet>\\r\\n            </router-outlet>\\r\\n        </div>\\r\\n    </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\\r\\n\"","module.exports = \".example-container {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0; }\\n\\n.example-radio-group {\\n  display: block;\\n  border: 1px solid #555;\\n  margin: 20px;\\n  padding: 10px; }\\n\\n.mat-list-item {\\n  width: 200px; }\\n\\n.app-sidenav-container {\\n  flex: 1;\\n  position: fixed;\\n  width: 100%;\\n  min-width: 100%;\\n  height: 100%;\\n  min-height: 100%; }\\n\\n.app-sidenav-content {\\n  display: flex;\\n  height: 100%;\\n  flex-direction: column; }\\n\\n.app-sidenav {\\n  width: 240px; }\\n\\n.wrapper {\\n  margin: 50px; }\\n\\nbody .mat-card-header-text {\\n  margin: 0 !important; }\\n\\nbody .mat-card-header > * {\\n  margin: 0 !important; }\\n\\n.example-card {\\n  margin-bottom: 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vaW5kZXgvQzpcXFVzZXJzXFxhbmRyZWkuZnVuYXJ1XFxEZXNrdG9wXFxGYWN1bHRhdGVcXERBV1xcTGlicmFyeVxcQmlibGlvdGVjYU9ubGluZVxcQmlibGlvdGVjYU9ubGluZS9zcmNcXGFwcFxcYWRtaW5cXGluZGV4XFxpbmRleC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1CQUFrQjtFQUNsQixPQUFNO0VBQ04sVUFBUztFQUNULFFBQU87RUFDUCxTQUFRLEVBQ1g7O0FBRUQ7RUFDSSxlQUFjO0VBQ2QsdUJBQXNCO0VBQ3RCLGFBQVk7RUFDWixjQUFhLEVBQ2hCOztBQUVEO0VBQ0ksYUFBVyxFQUNkOztBQUVEO0VBQ0ksUUFBTztFQUNQLGdCQUFlO0VBQ2YsWUFBVztFQUNYLGdCQUFlO0VBQ2YsYUFBWTtFQUNaLGlCQUFnQixFQUNuQjs7QUFFRDtFQUNJLGNBQWE7RUFDYixhQUFZO0VBQ1osdUJBQXNCLEVBQ3pCOztBQUVEO0VBQ0ksYUFBWSxFQUNmOztBQUVEO0VBQ0ksYUFBWSxFQUNmOztBQUdEO0VBQ0kscUJBQW9CLEVBQ3ZCOztBQUNEO0VBQ0kscUJBQW1CLEVBQ3RCOztBQUVEO0VBQ0ksb0JBQWtCLEVBQ3JCIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vaW5kZXgvaW5kZXguY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jb250YWluZXIge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG59XHJcblxyXG4uZXhhbXBsZS1yYWRpby1ncm91cCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICM1NTU7XHJcbiAgICBtYXJnaW46IDIwcHg7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG59XHJcblxyXG4ubWF0LWxpc3QtaXRlbXtcclxuICAgIHdpZHRoOjIwMHB4O1xyXG59XHJcblxyXG4uYXBwLXNpZGVuYXYtY29udGFpbmVyIHtcclxuICAgIGZsZXg6IDE7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1pbi13aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIG1pbi1oZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbi5hcHAtc2lkZW5hdi1jb250ZW50IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcblxyXG4uYXBwLXNpZGVuYXYge1xyXG4gICAgd2lkdGg6IDI0MHB4O1xyXG59XHJcblxyXG4ud3JhcHBlciB7XHJcbiAgICBtYXJnaW46IDUwcHg7XHJcbn1cclxuXHJcblxyXG5ib2R5IC5tYXQtY2FyZC1oZWFkZXItdGV4dCB7XHJcbiAgICBtYXJnaW46IDAgIWltcG9ydGFudDtcclxufVxyXG5ib2R5IC5tYXQtY2FyZC1oZWFkZXI+KntcclxuICAgIG1hcmdpbjowICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5leGFtcGxlLWNhcmR7XHJcbiAgICBtYXJnaW4tYm90dG9tOjIwcHg7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { FormControl } from '@angular/forms';\r\nimport { TitleService } from '../shared/title.service';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.scss']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n    pageTitle: string = \"\";\r\n    mode = new FormControl('side');\r\n    opened: boolean = true;\r\n    constructor(private titleService: TitleService) {\r\n        titleService.title$.subscribe(\r\n            tit => {\r\n                this.pageTitle = tit;\r\n            }\r\n        );\r\n    }\r\n\r\n      ngOnInit() {\r\n      }\r\n    \r\n\r\n}\r\n","import { BookAuthor } from './book-author';\r\n\r\nexport class Author {\r\n    public authorId: number;\r\n    public name: string;\r\n    public birthDay: Date;\r\n    public birthplace: string;\r\n    public description: string;\r\n    public bookAuthors: BookAuthor[];\r\n}","import { BookGenre } from './book-genre';\r\nimport { BookAuthor } from './book-author';\r\nimport { BookStore } from './book-store';\r\nimport { WishList } from './wish-list';\r\nimport { Review } from './review';\r\nimport { LoanRequest } from './loan-request';\r\nimport { Loan } from './loan';\r\n\r\nexport class Book {\r\n    public bookId: number;\r\n    public title: string;\r\n    public ISBN: string;\r\n    public imageUrl: string;\r\n    public year: Date;\r\n    public editura: string;\r\n    public description: string;\r\n    public nrOfPages: number;\r\n    public buyPrice: number;\r\n    public language: string;\r\n    public bookGenres: BookGenre[];\r\n    public bookAuthors: BookAuthor[];\r\n    public bookStores: BookStore[];\r\n    public wishLists: WishList[];\r\n    public reviews: Review[];\r\n    public loanRequests: LoanRequest[];\r\n    public loans: Loan[];\r\n}","import { BookGenre } from './book-genre';\r\n\r\nexport class Genre {\n    genreId: number;\n    name: string;\n    bookGenres: BookGenre[];\n    \n}\n","import { LoanRequest } from './loan-request';\r\nimport { BookStore } from './book-store';\r\nimport { Loan } from './loan';\r\n\r\nexport class Store {\r\n    public storeId: number;\r\n    public name: string;\r\n    public address: string;\r\n    public program: string;\r\n    public bookStores: BookStore[];\r\n    public loanRequests: LoanRequest[];\r\n    public loans: Loan[];\r\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TitleService {\n\n    private titleSource = new Subject<string>();\n\n    title$ = this.titleSource.asObservable();\n\n    getTitle(title: string) {\n        this.titleSource.next(title);\r\n    }\n\n  constructor() { }\n}\n","module.exports = \"<h1 mat-dialog-title fxLayoutAlign=\\\"center center\\\">\\r\\n    <span *ngIf=\\\"data.type=='add'\\\">\\r\\n        Adauga biblioteca\\r\\n    </span>\\r\\n    <span *ngIf=\\\"data.type=='edit'\\\">\\r\\n        Editeaza biblioteca\\r\\n    </span>\\r\\n</h1>\\r\\n<div mat-dialog-content class=\\\"example-container\\\" fxLayout=\\\"column\\\">\\r\\n    <div class=\\\"input-row\\\" *ngIf=\\\"data.type=='edit'\\\">\\r\\n        <mat-form-field fxFlex>\\r\\n            <input matInput placeholder=\\\"Id biblioteca\\\" disabled [ngModel]=\\\"data.store.storeId\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"input-row\\\">\\r\\n        <mat-form-field fxFlex>\\r\\n            <input matInput placeholder=\\\"Nume biblioteca\\\" [(ngModel)]=\\\"data.store.name\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"input-row\\\">\\r\\n        <mat-form-field fxFlex>\\r\\n            <textarea matInput placeholder=\\\"Adresa\\\" rows=\\\"3\\\" [(ngModel)]=\\\"data.store.address\\\"></textarea>\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"input-row\\\">\\r\\n        <mat-form-field fxFlex>\\r\\n            <textarea matInput placeholder=\\\"Program\\\" rows=\\\"3\\\" [(ngModel)]=\\\"data.store.program\\\"></textarea>\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n</div>\\r\\n<div mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n    <button mat-button color=\\\"primary\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial *ngIf=\\\"data.type=='add'\\\">\\r\\n        <mat-icon>add</mat-icon> Adauga\\r\\n    </button>\\r\\n    <button mat-button color=\\\"primary\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial *ngIf=\\\"data.type=='edit'\\\">\\r\\n        <mat-icon>save</mat-icon> Salveaza\\r\\n    </button>\\r\\n    <button mat-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\">\\r\\n        <mat-icon>close</mat-icon> Renunta\\r\\n    </button>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3N0b3Jlcy9hZGQtZWRpdC1zdG9yZS9hZGQtZWRpdC1zdG9yZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Store } from '../../models/store';\r\n\ninterface Data {\n    type: string;\r\n    store: Store;\r\n}\n\n@Component({\n    selector: 'app-add-edit-store',\n    templateUrl: './add-edit-store.component.html',\n    styleUrls: ['./add-edit-store.component.scss']\n})\nexport class AddEditStoreComponent implements OnInit {\n\n    constructor(public dialogRef: MatDialogRef<AddEditStoreComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: Data) { }\n\n    ngOnInit() {\n\n        if (this.data.store == null || this.data.store == undefined) {\n            this.data.store = new Store();\r\n        }\n\n    }\n\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}","module.exports = \"<h1 mat-dialog-title fxLayoutAlign=\\\"center center\\\">Sterge biblioteca</h1>\\r\\n<div mat-dialog-content>\\r\\n    <p>Esti sigur ca vrei sa stergi biblioteca <b>{{data.name}}</b> cu id-ul <b>{{data.storeId}}</b>?</p>\\r\\n</div>\\r\\n<div mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n    <button mat-button color=\\\"warn\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>\\r\\n        <mat-icon>delete</mat-icon> Da\\r\\n    </button>\\r\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"onNoClick()\\\">\\r\\n        <mat-icon>close</mat-icon> Nu\\r\\n    </button>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3N0b3Jlcy9kZWxldGVzdG9yZS9kZWxldGVzdG9yZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Store } from '../../models/store';\r\n\n@Component({\n  selector: 'app-deletestore',\n  templateUrl: './deletestore.component.html',\n  styleUrls: ['./deletestore.component.scss']\n})\nexport class DeletestoreComponent implements OnInit {\n\n    constructor(public dialogRef: MatDialogRef<DeletestoreComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: Store) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\n}\n","module.exports = \"\\r\\n<div fxLayout=\\\"row\\\">\\r\\n    <mat-form-field fxFlex>\\r\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n    </mat-form-field>\\r\\n    <div fxFlex=\\\"2 2 calc(10em + 10px)\\\"></div>\\r\\n    <div fxFlex fxLayoutAlign=\\\"end center\\\">\\r\\n        <button mat-button color=\\\"accent\\\" (click)=\\\"AddStore()\\\">\\r\\n            <mat-icon>add</mat-icon> Adauga\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"storeId\\\">\\r\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> Id. </mat-header-cell>\\r\\n            <mat-cell mat-cell *matCellDef=\\\"let element\\\"> {{element.storeId}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"name\\\">\\r\\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\r\\n            <mat-cell mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"address\\\">\\r\\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Adresa </mat-header-cell>\\r\\n            <mat-cell mat-cell *matCellDef=\\\"let element\\\"> {{element.address}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"program\\\">\\r\\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Program </mat-header-cell>\\r\\n            <mat-cell mat-cell *matCellDef=\\\"let element\\\"> {{element.program}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"actions\\\">\\r\\n            <mat-header-cell mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n            <mat-cell mat-cell *matCellDef=\\\"let element\\\" fxLayoutAlign=\\\"end center\\\">\\r\\n                <button mat-button color=\\\"primary\\\" (click)=\\\"EditStore(element)\\\">Edit</button>\\r\\n                <button mat-button color=\\\"warn\\\" (click)=\\\"deleteStore(element)\\\">Delete</button>\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <mat-header-row mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n        <mat-row mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n\\r\\n\\r\\n    </table>\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20, 30]\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vc3RvcmVzL0M6XFxVc2Vyc1xcYW5kcmVpLmZ1bmFydVxcRGVza3RvcFxcRmFjdWx0YXRlXFxEQVdcXExpYnJhcnlcXEJpYmxpb3RlY2FPbmxpbmVcXEJpYmxpb3RlY2FPbmxpbmUvc3JjXFxhcHBcXGFkbWluXFxzdG9yZXNcXHN0b3Jlcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQVcsRUFDZCIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3N0b3Jlcy9zdG9yZXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit, Output, EventEmitter, ViewChild, ChangeDetectorRef, AfterViewChecked, AfterViewInit } from '@angular/core';\r\nimport { TitleService } from '../shared/title.service';\r\nimport { StoresService } from './stores.service';\r\nimport { Store } from '../models/store';\r\nimport { MatTableDataSource, MatSort, MatPaginator, MatDialog, MatSnackBar } from '@angular/material';\r\nimport { SpinnerService } from 'src/app/core/spinner.service';\nimport { DeletestoreComponent } from './deletestore/deletestore.component';\r\nimport { AddEditStoreComponent } from './add-edit-store/add-edit-store.component';\r\n\n@Component({\n  selector: 'app-stores',\n  templateUrl: './stores.component.html',\n  styleUrls: ['./stores.component.scss']\n})\nexport class StoresComponent implements OnInit {\n\n    ngAfterViewInit(): void {\r\n        this.dataSource.sort = this.sort;\r\n        this.dataSource.paginator = this.paginator;\r\n    }\r\n\r\n\r\n    @Output() titled = new EventEmitter<string>();\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n    stores: Store[] = [];\r\n    _addStore: Store;\r\n    displayedColumns: string[] = ['storeId', 'name', 'address', 'program', 'actions'];\r\n    dataSource: MatTableDataSource<Store> = new MatTableDataSource(this.stores);\r\n\r\n    constructor(private titleService: TitleService,\r\n        private storesService: StoresService,\r\n        public dialog: MatDialog,\r\n        private snackBar: MatSnackBar,\r\n        private spinnerService: SpinnerService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.titleService.getTitle(\"Biblioteci\");\r\n\r\n        this.getStores();\r\n\r\n    }\r\n\r\n    getStores() {\r\n        this.storesService.getStores().subscribe(\r\n            data => {\r\n                this.stores = data;\r\n                this.dataSource = new MatTableDataSource(this.stores);\r\n                this.dataSource.sort = this.sort;\r\n                this.dataSource.paginator = this.paginator;\r\n            });\r\n    }\r\n\r\n\r\n    applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n\r\n\r\n    deleteStore(item: Store): void {\r\n        const dialogRef = this.dialog.open(DeletestoreComponent, {\r\n            width: '250px',\r\n            data: item\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log(result);\r\n\r\n            if (result != undefined) {\r\n\r\n                this.spinnerService.spin$.next(true);\r\n\r\n                this.storesService.deleteStore(item).subscribe(\r\n                    (response) => {\r\n                        this.spinnerService.spin$.next(false);\r\n                        this.snackBar.open(\"Biblioteca a fost stearsa cu succes!\", null, {\r\n                            duration: 3000,\r\n                            panelClass: \"text-success\"\r\n                        });\r\n                        this.getStores();\r\n\r\n                    },\r\n                    (error) => {\r\n                        this.spinnerService.spin$.next(false);\r\n                        this.snackBar.open(\"A aparut o eroare, incearca din nou!\", \"\", {\r\n                            duration: 3000,\r\n                            panelClass: \"text-danger\"\r\n                        });\r\n                    }\r\n                )\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    AddStore() {\r\n        const dialogRef = this.dialog.open(AddEditStoreComponent, {\r\n            width: '350px',\r\n            data: {\r\n                type: \"add\",\r\n                store: this._addStore\r\n            }\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n\r\n            if (result != undefined && result != null) {\r\n\r\n                this.AddStoreConfirm(result.store);\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    AddStoreConfirm(store: Store) {\r\n\r\n        this.spinnerService.spin$.next(true);\r\n\r\n        this.storesService.addStore(store).subscribe(\r\n            (response) => {\r\n                this.spinnerService.spin$.next(false);\r\n                this.snackBar.open(\"Biblioteca a fost adaugata cu succes!\", null, {\r\n                    duration: 3000,\r\n                    panelClass: \"text-success\"\r\n                });\r\n                this.getStores();\r\n\r\n            },\r\n            (error) => {\r\n                this.spinnerService.spin$.next(false);\r\n                this.snackBar.open(\"A aparut o eroare, incearca din nou!\", \"\", {\r\n                    duration: 3000,\r\n                    panelClass: \"text-danger\"\r\n                });\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    EditStore(item: Store) {\r\n        const dialogRef = this.dialog.open(AddEditStoreComponent, {\r\n            width: '350px',\r\n            data: {\r\n                type: \"edit\",\r\n                store: Object.assign({}, item)\r\n            },\r\n            panelClass: \"formFieldWidth\"\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            this.EditStoreConfirm(result.store);\r\n        });\r\n    }\r\n\r\n    EditStoreConfirm(store: Store) {\r\n\r\n        this.spinnerService.spin$.next(true);\r\n\r\n        this.storesService.editStore(store).subscribe(\r\n            (response) => {\r\n                this.spinnerService.spin$.next(false);\r\n                this.snackBar.open(\"Biblioteca a fost modificata cu succes!\", null, {\r\n                    duration: 3000,\r\n                    panelClass: \"text-success\"\r\n                });\r\n                this.getStores();\r\n\r\n            },\r\n            (error) => {\r\n                this.spinnerService.spin$.next(false);\r\n                this.snackBar.open(\"A aparut o eroare, incearca din nou!\", \"\", {\r\n                    duration: 3000,\r\n                    panelClass: \"text-danger\"\r\n                });\r\n            }\r\n        );\r\n\r\n    }\r\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Store } from '../models/store';\r\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class StoresService {\n\n    private baseUrl: string;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.baseUrl = \"/api/Stores/\";\r\n    }\r\n\r\n    getStores(): Observable<Store[]> {\r\n        return this.http.get<Store[]>(this.baseUrl);\r\n    }\r\n\r\n    deleteStore(store: Store): Observable<Store> {\r\n        return this.http.delete<Store>(this.baseUrl + store.storeId);\r\n    }\r\n\r\n    addStore(store: Store): Observable<Store> {\r\n        return this.http.post<Store>(this.baseUrl, store);\r\n    }\r\n\r\n    editStore(store: Store): Observable<any> {\r\n        return this.http.put(this.baseUrl + store.storeId, store);\r\n    }\n}\n"],"sourceRoot":""}